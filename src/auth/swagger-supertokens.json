{
  "openapi": "3.0.0",
  "info": {
    "title": "Supertokens API Interface",
    "version": "1.13.2"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "Supertokens / Session Recipe"
    },
    {
      "name": "Supertokens / EmailPassword Recipe"
    },
    {
      "name": "Supertokens / Passwordless Recipe"
    }
  ],
  "paths": {
    "/{plessBasePath}/signinup/code": {
      "post": {
        "tags": [
          "Supertokens / Passwordless Recipe"
        ],
        "description": "Start sign in/up process with passwordless\n",
        "operationId": "passwordlessSignInUpStart",
        "parameters": [
          {
            "name": "plessBasePath",
            "in": "path",
            "description": "Its value depends on the apiBasePath set by the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "auth"
            }
          },
          {
            "name": "rid",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "passwordless"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/signinup_code_body_1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Started the passwordless sign in/up process.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "404": {
            "description": "error code 404",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/notFound"
                }
              }
            }
          },
          "500": {
            "description": "error code 500",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/internalError"
                }
              }
            }
          }
        }
      }
    },
    "/{plessBasePath}/signinup/code/resend": {
      "post": {
        "tags": [
          "Supertokens / Passwordless Recipe"
        ],
        "description": "Resend passwordless code\n",
        "operationId": "passwordlessSignInUpResend",
        "parameters": [
          {
            "name": "plessBasePath",
            "in": "path",
            "description": "Its value depends on the apiBasePath set by the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "auth"
            }
          },
          {
            "name": "rid",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "passwordless"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/code_resend_body_1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Started the passwordless sign in/up process.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "404": {
            "description": "error code 404",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/notFound"
                }
              }
            }
          },
          "500": {
            "description": "error code 500",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/internalError"
                }
              }
            }
          }
        }
      }
    },
    "/{plessBasePath}/signinup/code/consume": {
      "post": {
        "tags": [
          "Supertokens / Passwordless Recipe"
        ],
        "description": "Finish sign in/up process with passwordless\n",
        "operationId": "passwordlessSignInUpConsume",
        "parameters": [
          {
            "name": "plessBasePath",
            "in": "path",
            "description": "Its value depends on the apiBasePath set by the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "auth"
            }
          },
          {
            "name": "rid",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "passwordless"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/code_consume_body_1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signin/up a user",
            "headers": {
              "Set-Cookie": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "example": "sAccessToken=eyJhb...%3D%3D; Path=/; Expires=Tue, 22 Jun 2021 07:43:07 GMT; HttpOnly; SameSite=Lax; sRefreshToken=K91cQ7ezMbu...cb61c3.V2; Path=/auth/session/refresh; Expires=Thu, 30 Sep 2021 06:43:07 GMT; HttpOnly; SameSite=Lax; sIdRefreshToken=6ed3...6c0d; Path=/; Expires=Thu, 30 Sep 2021 06:43:07 GMT; HttpOnly; SameSite=Lax"
                }
              },
              "anti-csrf": {
                "description": "This will only be here if enabled by the user",
                "style": "simple",
                "explode": false,
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              },
              "front-token": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              },
              "id-refresh-token": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              },
              "Access-Control-Expose-Headers": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "enum": [
                    "id-refresh-token, anti-csrf, front-token"
                  ]
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "404": {
            "description": "error code 404",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/notFound"
                }
              }
            }
          },
          "500": {
            "description": "error code 500",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/internalError"
                }
              }
            }
          }
        }
      }
    },
    "/{plessBasePath}/signup/phonenumber/exists": {
      "get": {
        "tags": [
          "Supertokens / Passwordless Recipe"
        ],
        "description": "Check if an email exists\n",
        "operationId": "passwordlessPhoneNumberExists",
        "parameters": [
          {
            "name": "plessBasePath",
            "in": "path",
            "description": "Its value depends on the apiBasePath set by the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "auth"
            }
          },
          {
            "name": "rid",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "passwordless"
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "0036701234567"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checks if an email exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "404": {
            "description": "error code 404",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/notFound"
                }
              }
            }
          },
          "500": {
            "description": "error code 500",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/internalError"
                }
              }
            }
          }
        }
      }
    },
    "/{sessionBasePath}/signout": {
      "post": {
        "tags": [
          "Supertokens / Session Recipe"
        ],
        "description": "Logout user\n",
        "operationId": "signout",
        "parameters": [
          {
            "name": "sessionBasePath",
            "in": "path",
            "description": "Its value depends on the apiBasePath set by the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "auth"
            }
          },
          {
            "name": "rid",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "session"
          },
          {
            "name": "anti-csrf",
            "in": "header",
            "description": "This will only be here if enabled by the user.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/token"
            }
          },
          {
            "name": "sIdRefreshToken",
            "in": "cookie",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/cookie"
            }
          },
          {
            "name": "sRefreshToken",
            "in": "cookie",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/cookie"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logout user",
            "headers": {
              "Set-Cookie": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "example": "sAccessToken=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT; HttpOnly; SameSite=Lax sRefreshToken=; Path=/auth/session/refresh; Expires=Thu, 01 Jan 1970 00:00:00 GMT; HttpOnly; SameSite=Lax sIdRefreshToken=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT; HttpOnly; SameSite=Lax"
                }
              },
              "id-refresh-token": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "example": "remove"
                }
              },
              "Access-Control-Expose-Headers": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "example": "id-refresh-token"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_6"
                }
              }
            }
          },
          "404": {
            "description": "error code 404",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/notFound"
                }
              }
            }
          },
          "500": {
            "description": "error code 500",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/internalError"
                }
              }
            }
          }
        }
      }
    },
    "/{sessionBasePath}/session/refresh": {
      "post": {
        "tags": [
          "Supertokens / Session Recipe"
        ],
        "description": "Refresh the user session\n",
        "operationId": "refresh",
        "parameters": [
          {
            "name": "sessionBasePath",
            "in": "path",
            "description": "Its value depends on the apiBasePath set by the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "auth"
            }
          },
          {
            "name": "rid",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "session"
          },
          {
            "name": "anti-csrf",
            "in": "header",
            "description": "This will only be here if enabled by the user.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/token"
            }
          },
          {
            "name": "sIdRefreshToken",
            "in": "cookie",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/cookie"
            }
          },
          {
            "name": "sRefreshToken",
            "in": "cookie",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/cookie"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Refresh users",
            "headers": {
              "Set-Cookie": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "example": "sAccessToken=eyJhb...%3D%3D; Path=/; Expires=Tue, 22 Jun 2021 07:43:07 GMT; HttpOnly; SameSite=Lax; sRefreshToken=K91cQ7ezMbu...cb61c3.V2; Path=/auth/session/refresh; Expires=Thu, 30 Sep 2021 06:43:07 GMT; HttpOnly; SameSite=Lax; sIdRefreshToken=6ed3...6c0d; Path=/; Expires=Thu, 30 Sep 2021 06:43:07 GMT; HttpOnly; SameSite=Lax"
                }
              },
              "anti-csrf": {
                "description": "This will only be here if enabled by the user",
                "style": "simple",
                "explode": false,
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              },
              "front-token": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              },
              "id-refresh-token": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              },
              "Access-Control-Expose-Headers": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "example": "id-refresh-token, anti-csrf, front-token"
                }
              }
            }
          },
          "404": {
            "description": "error code 404",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/notFound"
                }
              }
            }
          },
          "500": {
            "description": "error code 500",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/internalError"
                }
              }
            }
          }
        }
      }
    },
    "/{epBasePath}/signin": {
      "post": {
        "tags": [
          "Supertokens / EmailPassword Recipe"
        ],
        "description": "Signin a user with email ID and password\n",
        "operationId": "signIn",
        "parameters": [
          {
            "name": "epBasePath",
            "in": "path",
            "description": "Its value depends on the apiBasePath set by the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "auth"
            }
          },
          {
            "name": "rid",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "emailpassword"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiBasePath_signin_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign in Response",
            "headers": {
              "Set-Cookie": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "example": "sAccessToken=eyJhb...%3D%3D; Path=/; Expires=Tue, 22 Jun 2021 07:43:07 GMT; HttpOnly; SameSite=Lax; sRefreshToken=K91cQ7ezMbu...cb61c3.V2; Path=/auth/session/refresh; Expires=Thu, 30 Sep 2021 06:43:07 GMT; HttpOnly; SameSite=Lax; sIdRefreshToken=6ed3...6c0d; Path=/; Expires=Thu, 30 Sep 2021 06:43:07 GMT; HttpOnly; SameSite=Lax"
                }
              },
              "anti-csrf": {
                "description": "This will only be here if enabled by the user",
                "style": "simple",
                "explode": false,
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              },
              "front-token": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              },
              "id-refresh-token": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              },
              "Access-Control-Expose-Headers": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "enum": [
                    "id-refresh-token, anti-csrf, front-token"
                  ]
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_7"
                }
              }
            }
          },
          "404": {
            "description": "error code 404",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/notFound"
                }
              }
            }
          },
          "500": {
            "description": "error code 500",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/internalError"
                }
              }
            }
          }
        }
      }
    },
    "/{epBasePath}/signup": {
      "post": {
        "tags": [
          "Supertokens / EmailPassword Recipe"
        ],
        "description": "Signup a user with email ID and password\n",
        "operationId": "signUp",
        "parameters": [
          {
            "name": "epBasePath",
            "in": "path",
            "description": "Its value depends on the apiBasePath set by the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "auth"
            }
          },
          {
            "name": "rid",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "emailpassword"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiBasePath_signup_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign up Response",
            "headers": {
              "Set-Cookie": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "example": "sAccessToken=eyJhb...%3D%3D; Path=/; Expires=Tue, 22 Jun 2021 07:43:07 GMT; HttpOnly; SameSite=Lax; sRefreshToken=K91cQ7ezMbu...cb61c3.V2; Path=/auth/session/refresh; Expires=Thu, 30 Sep 2021 06:43:07 GMT; HttpOnly; SameSite=Lax; sIdRefreshToken=6ed3...6c0d; Path=/; Expires=Thu, 30 Sep 2021 06:43:07 GMT; HttpOnly; SameSite=Lax"
                }
              },
              "anti-csrf": {
                "description": "This will only be here if enabled by the user",
                "style": "simple",
                "explode": false,
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              },
              "front-token": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              },
              "id-refresh-token": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              },
              "Access-Control-Expose-Headers": {
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string",
                  "enum": [
                    "id-refresh-token, anti-csrf, front-token"
                  ]
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_8"
                }
              }
            }
          },
          "404": {
            "description": "error code 404",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/notFound"
                }
              }
            }
          },
          "500": {
            "description": "error code 500",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/internalError"
                }
              }
            }
          }
        }
      }
    },
    "/{epBasePath}/signup/email/exists": {
      "get": {
        "tags": [
          "Supertokens / EmailPassword Recipe"
        ],
        "description": "Check if an email exists\n",
        "operationId": "emailExists",
        "parameters": [
          {
            "name": "epBasePath",
            "in": "path",
            "description": "Its value depends on the apiBasePath set by the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "auth"
            }
          },
          {
            "name": "rid",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "emailpassword"
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "testuser@gmail.com"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checks if an email exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "404": {
            "description": "error code 404",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/notFound"
                }
              }
            }
          },
          "500": {
            "description": "error code 500",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/internalError"
                }
              }
            }
          }
        }
      }
    },
    "/{epBasePath}/user/password/reset/token": {
      "post": {
        "tags": [
          "Supertokens / EmailPassword Recipe"
        ],
        "description": "Generate a new reset password token for this user\n",
        "operationId": "passwordResetToken",
        "parameters": [
          {
            "name": "epBasePath",
            "in": "path",
            "description": "Its value depends on the apiBasePath set by the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "auth"
            }
          },
          {
            "name": "rid",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "emailpassword"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reset_token_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Generate a new reset password token for this user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_9"
                }
              }
            }
          },
          "404": {
            "description": "error code 404",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/notFound"
                }
              }
            }
          },
          "500": {
            "description": "error code 500",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/internalError"
                }
              }
            }
          }
        }
      }
    },
    "/{epBasePath}/user/password/reset": {
      "post": {
        "tags": [
          "Supertokens / EmailPassword Recipe"
        ],
        "description": "Reset a password using password reset token\n",
        "operationId": "passwordReset",
        "parameters": [
          {
            "name": "epBasePath",
            "in": "path",
            "description": "Its value depends on the apiBasePath set by the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "auth"
            }
          },
          {
            "name": "rid",
            "in": "header",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "emailpassword"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/password_reset_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset a password using password reset token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_10"
                }
              }
            }
          },
          "404": {
            "description": "error code 404",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/notFound"
                }
              }
            }
          },
          "500": {
            "description": "error code 500",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/internalError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "statusOK": {
        "type": "string",
        "enum": [
          "OK"
        ]
      },
      "token": {
        "type": "string",
        "example": "ZTRiOTBjNz...jI5MTZlODkxw"
      },
      "cookie": {
        "type": "string",
        "example": "ed3164...06c0d; Path=/; Expires=Thu, 30 Sep 2021 06:43:07 GMT; HttpOnly; SameSite=Lax"
      },
      "id": {
        "type": "string",
        "enum": [
          "email",
          "password"
        ]
      },
      "userId": {
        "type": "string",
        "example": "fa7a0841-b533-4478-95533-0fde890c3483"
      },
      "thirdPartyUser": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/userId"
          },
          "email": {
            "type": "string",
            "example": "testuser@gmail.com"
          },
          "timeJoined": {
            "type": "number",
            "example": 1638433545183
          },
          "thirdParty": {
            "$ref": "#/components/schemas/thirdPartyUser_thirdParty"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/userId"
          },
          "email": {
            "type": "string",
            "example": "testuser@gmail.com"
          },
          "timeJoined": {
            "type": "number",
            "example": 1638433545183
          }
        }
      },
      "email": {
        "type": "string",
        "example": "testuser@gmail.com"
      },
      "phoneNumber": {
        "type": "string",
        "example": "0036701234567"
      },
      "deviceId": {
        "type": "string",
        "description": "This should be saved on the starting device to enable the manual code entry flow.",
        "example": "TU/52WOcktSv99zqaAZuWJG9BSoS0aRLfCbep8rFEwk="
      },
      "preAuthSessionId": {
        "type": "string",
        "description": "An identifier that used to identify the login attempt/device.",
        "example": "kFmkPQEAJtACiT2w/K8fndEuNm+XozJXSZSlWEr+iGs="
      },
      "passwordlessUser": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/userId"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/phoneNumber"
          },
          "timeJoined": {
            "type": "number",
            "example": 1638433545183
          }
        }
      },
      "thirdPartyId": {
        "type": "string",
        "example": "google"
      },
      "exists": {
        "type": "boolean",
        "example": true
      },
      "method": {
        "type": "string",
        "example": "token"
      },
      "code": {
        "$ref": "#/components/schemas/token"
      },
      "authCodeResponse": {
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          }
        },
        "description": "Can contain random data other than the two listed below"
      },
      "redirectURI": {
        "type": "string",
        "example": "https://yourdomain.com/callback"
      },
      "formFields": {
        "type": "array",
        "example": [
          {
            "id": "email",
            "value": "testuser@gmail.com"
          },
          {
            "id": "password",
            "value": "testPass123"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/formFields_inner"
        }
      },
      "signInResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/statusOK"
          },
          "user": {
            "$ref": "#/components/schemas/user"
          }
        }
      },
      "signupResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/statusOK"
          },
          "user": {
            "$ref": "#/components/schemas/user"
          }
        }
      },
      "passwordResetTokenResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/statusOK"
          }
        }
      },
      "signinupResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/statusOK"
          },
          "user": {
            "$ref": "#/components/schemas/thirdPartyUser"
          },
          "createdNewUser": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "passwordResetResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "RESET_PASSWORD_INVALID_TOKEN_ERROR"
            ]
          }
        }
      },
      "fieldErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "FIELD_ERROR"
            ]
          },
          "formFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fieldErrorResponse_formFields"
            }
          }
        }
      },
      "genericErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "GENERAL_ERROR"
            ]
          },
          "message": {
            "type": "string",
            "example": "Error Message"
          }
        }
      },
      "wrongCredentialsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "WRONG_CREDENTIALS_ERROR"
            ]
          }
        }
      },
      "noEmailGivenByProviderResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "NO_EMAIL_GIVEN_BY_PROVIDER"
            ]
          }
        }
      },
      "thirdPartyFieldErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "FIELD_ERROR"
            ]
          },
          "error": {
            "type": "string",
            "example": "Error Message"
          }
        }
      },
      "internalError": {
        "type": "string",
        "enum": [
          "Internal Error"
        ]
      },
      "badRequest": {
        "type": "string",
        "enum": [
          "Bad request"
        ]
      },
      "notFound": {
        "type": "string",
        "enum": [
          "Not Found"
        ]
      },
      "signinup_code_body": {
        "oneOf": [
          {
            "required": [
              "email"
            ],
            "type": "object",
            "properties": {
              "email": {
                "$ref": "#/components/schemas/email"
              }
            }
          },
          {
            "required": [
              "phoneNumber"
            ],
            "type": "object",
            "properties": {
              "phoneNumber": {
                "$ref": "#/components/schemas/phoneNumber"
              }
            }
          }
        ]
      },
      "inline_response_200": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "status": {
                "$ref": "#/components/schemas/statusOK"
              },
              "deviceId": {
                "$ref": "#/components/schemas/deviceId"
              },
              "preAuthSessionId": {
                "$ref": "#/components/schemas/preAuthSessionId"
              },
              "flowType": {
                "type": "string",
                "enum": [
                  "USER_INPUT_CODE"
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/genericErrorResponse"
          }
        ]
      },
      "code_resend_body": {
        "required": [
          "deviceId",
          "preAuthSessionId"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/deviceId"
          },
          "preAuthSessionId": {
            "$ref": "#/components/schemas/preAuthSessionId"
          }
        }
      },
      "inline_response_200_1": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "OK",
                  "RESTART_FLOW_ERROR"
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/genericErrorResponse"
          }
        ]
      },
      "code_consume_body": {
        "oneOf": [
          {
            "required": [
              "linkCode",
              "preAuthSessionId"
            ],
            "type": "object",
            "properties": {
              "preAuthSessionId": {
                "$ref": "#/components/schemas/preAuthSessionId"
              },
              "linkCode": {
                "type": "string",
                "example": "b10lbT_SnDC4flA6Fn7pE5TtG5k5NfigLef4QMBeGA8"
              }
            }
          },
          {
            "required": [
              "deviceId",
              "preAuthSessionId",
              "userInputCode"
            ],
            "type": "object",
            "properties": {
              "preAuthSessionId": {
                "$ref": "#/components/schemas/preAuthSessionId"
              },
              "deviceId": {
                "$ref": "#/components/schemas/deviceId"
              },
              "userInputCode": {
                "type": "string",
                "example": "432123"
              }
            }
          }
        ]
      },
      "inline_response_200_2": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "status": {
                "$ref": "#/components/schemas/statusOK"
              },
              "createdNewUser": {
                "type": "boolean",
                "example": true
              },
              "user": {
                "$ref": "#/components/schemas/passwordlessUser"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "INCORRECT_USER_INPUT_CODE_ERROR",
                  "EXPIRED_USER_INPUT_CODE_ERROR"
                ]
              },
              "failedCodeInputAttemptCount": {
                "type": "number",
                "example": 2
              },
              "maximumCodeInputAttempts": {
                "type": "number",
                "example": 5
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "RESTART_FLOW_ERROR"
                ]
              }
            }
          },
          {
            "$ref": "#/components/schemas/genericErrorResponse"
          }
        ]
      },
      "inline_response_200_3": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/statusOK"
          },
          "exists": {
            "$ref": "#/components/schemas/exists"
          }
        }
      },
      "apiBasePath_signinup_body": {
        "type": "object",
        "properties": {
          "redirectURI": {
            "$ref": "#/components/schemas/redirectURI"
          },
          "thirdPartyId": {
            "$ref": "#/components/schemas/thirdPartyId"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "authCodeResponse": {
            "$ref": "#/components/schemas/authCodeResponse"
          },
          "clientId": {
            "type": "string",
            "example": "6779ef20e7...5817b79602"
          }
        }
      },
      "inline_response_200_4": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/signinupResponse"
          },
          {
            "$ref": "#/components/schemas/noEmailGivenByProviderResponse"
          },
          {
            "$ref": "#/components/schemas/thirdPartyFieldErrorResponse"
          }
        ]
      },
      "inline_response_200_5": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/statusOK"
          },
          "url": {
            "type": "string",
            "example": "https://providerdomain.com/authorize?client_id=..&scope=..&access_type=.."
          }
        }
      },
      "callback_apple_body": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The Authorization code which will be exchanged for an access token"
          },
          "state": {
            "type": "string",
            "description": "A unique string used to mitigate CSRF attacks"
          }
        }
      },
      "signinup_code_body_1": {
        "oneOf": [
          {
            "required": [
              "phoneNumber"
            ],
            "type": "object",
            "properties": {
              "phoneNumber": {
                "$ref": "#/components/schemas/phoneNumber"
              }
            }
          }
        ]
      },
      "code_resend_body_1": {
        "required": [
          "deviceId",
          "preAuthSessionId"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/deviceId"
          },
          "preAuthSessionId": {
            "$ref": "#/components/schemas/preAuthSessionId"
          }
        }
      },
      "code_consume_body_1": {
        "oneOf": [
          {
            "required": [
              "deviceId",
              "preAuthSessionId",
              "userInputCode"
            ],
            "type": "object",
            "properties": {
              "preAuthSessionId": {
                "$ref": "#/components/schemas/preAuthSessionId"
              },
              "deviceId": {
                "$ref": "#/components/schemas/deviceId"
              },
              "userInputCode": {
                "type": "string",
                "example": "432123"
              }
            }
          }
        ]
      },
      "inline_response_200_6": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/statusOK"
          }
        }
      },
      "apiBasePath_signin_body": {
        "type": "object",
        "properties": {
          "formFields": {
            "$ref": "#/components/schemas/formFields"
          }
        }
      },
      "inline_response_200_7": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/signInResponse"
          },
          {
            "$ref": "#/components/schemas/fieldErrorResponse"
          },
          {
            "$ref": "#/components/schemas/wrongCredentialsResponse"
          }
        ]
      },
      "apiBasePath_signup_body": {
        "type": "object",
        "properties": {
          "formFields": {
            "$ref": "#/components/schemas/formFields"
          }
        }
      },
      "inline_response_200_8": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/signupResponse"
          },
          {
            "$ref": "#/components/schemas/fieldErrorResponse"
          }
        ]
      },
      "reset_token_body": {
        "type": "object",
        "properties": {
          "formFields": {
            "$ref": "#/components/schemas/formFields"
          }
        },
        "example": {
          "formFields": [
            {
              "id": "email",
              "value": "test@email.com"
            }
          ]
        }
      },
      "inline_response_200_9": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/passwordResetTokenResponse"
          },
          {
            "$ref": "#/components/schemas/fieldErrorResponse"
          }
        ]
      },
      "password_reset_body": {
        "type": "object",
        "properties": {
          "method": {
            "$ref": "#/components/schemas/method"
          },
          "formfields": {
            "$ref": "#/components/schemas/formFields"
          },
          "token": {
            "$ref": "#/components/schemas/token"
          }
        },
        "example": {
          "method": "token",
          "formFields": [
            {
              "id": "password",
              "value": "newPass123"
            }
          ],
          "token": "ZTRiOTBjNz...jI5MTZlODkxw"
        }
      },
      "inline_response_200_10": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/passwordResetResponse"
          },
          {
            "$ref": "#/components/schemas/fieldErrorResponse"
          }
        ]
      },
      "apiBasePath_signinup_body_1": {
        "type": "object",
        "properties": {
          "redirectURI": {
            "$ref": "#/components/schemas/redirectURI"
          },
          "thirdPartyId": {
            "$ref": "#/components/schemas/thirdPartyId"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "authCodeResponse": {
            "$ref": "#/components/schemas/authCodeResponse"
          },
          "clientId": {
            "type": "string",
            "example": "6779ef20e7...5817b79602"
          }
        }
      },
      "callback_apple_body_1": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The Authorization code which will be exchanged for an access token"
          },
          "state": {
            "type": "string",
            "description": "A unique string used to mitigate CSRF attacks"
          }
        }
      },
      "apiBasePath_signin_body_1": {
        "type": "object",
        "properties": {
          "formFields": {
            "$ref": "#/components/schemas/formFields"
          }
        }
      },
      "apiBasePath_signup_body_1": {
        "type": "object",
        "properties": {
          "formFields": {
            "$ref": "#/components/schemas/formFields"
          }
        }
      },
      "reset_token_body_1": {
        "type": "object",
        "properties": {
          "formFields": {
            "$ref": "#/components/schemas/formFields"
          }
        },
        "example": {
          "formFields": [
            {
              "id": "email",
              "value": "test@email.com"
            }
          ]
        }
      },
      "password_reset_body_1": {
        "type": "object",
        "properties": {
          "method": {
            "$ref": "#/components/schemas/method"
          },
          "formfields": {
            "$ref": "#/components/schemas/formFields"
          },
          "token": {
            "$ref": "#/components/schemas/token"
          }
        },
        "example": {
          "method": "token",
          "formFields": [
            {
              "id": "password",
              "value": "newPass123"
            }
          ],
          "token": "ZTRiOTBjNz...jI5MTZlODkxw"
        }
      },
      "apiBasePath_signinup_body_2": {
        "type": "object",
        "properties": {
          "redirectURI": {
            "$ref": "#/components/schemas/redirectURI"
          },
          "thirdPartyId": {
            "$ref": "#/components/schemas/thirdPartyId"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "authCodeResponse": {
            "$ref": "#/components/schemas/authCodeResponse"
          },
          "clientId": {
            "type": "string",
            "example": "6779ef20e7...5817b79602"
          }
        }
      },
      "callback_apple_body_2": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The Authorization code which will be exchanged for an access token"
          },
          "state": {
            "type": "string",
            "description": "A unique string used to mitigate CSRF attacks"
          }
        }
      },
      "inline_response_200_11": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "EMAIL_ALREADY_VERIFIED_ERROR"
            ]
          }
        }
      },
      "inline_response_200_12": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/statusOK"
          },
          "isVerified": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "email_verify_body": {
        "type": "object",
        "properties": {
          "method": {
            "$ref": "#/components/schemas/method"
          },
          "token": {
            "$ref": "#/components/schemas/token"
          }
        }
      },
      "inline_response_200_13": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "EMAIL_VERIFICATION_INVALID_TOKEN_ERROR"
            ]
          }
        }
      },
      "inline_response_200_14": {
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_14_keys"
            }
          }
        }
      },
      "inline_response_200_15": {
        "type": "object",
        "properties": {
          "issuer": {
            "type": "string",
            "description": "URL using the https scheme with no query or fragment component that the OP asserts as its Issuer Identifier (https://openid.net/specs/openid-connect-discovery-1_0.html section 3)",
            "example": "https://api.example.com/auth"
          },
          "jwks_uri": {
            "type": "string",
            "description": "URL for fetching a list JsonWebKey, used for JWT signature verification. Refer to /jwt/jwks.json API in the JWT recipe for JWK details",
            "example": "https://api.example.com/auth/jwt/jwks.json"
          }
        }
      },
      "thirdPartyUser_thirdParty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "google"
          },
          "userId": {
            "type": "string",
            "example": "rq238mrq2389rvq123213"
          }
        },
        "example": null
      },
      "formFields_inner": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "fieldErrorResponse_formFields": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "email"
          },
          "error": {
            "type": "string",
            "example": "Error Message"
          }
        },
        "example": null
      },
      "inline_response_200_14_keys": {
        "type": "object",
        "properties": {
          "alg": {
            "type": "string",
            "description": "The algorithm to use when creating the JWT.",
            "enum": [
              "RS256"
            ]
          },
          "kty": {
            "type": "string",
            "example": "RSA"
          },
          "use": {
            "type": "string",
            "example": "sig"
          },
          "kid": {
            "type": "string",
            "description": "Unique identifier for the JWK"
          },
          "n": {
            "type": "string",
            "description": "Modulus for the key"
          },
          "e": {
            "type": "string",
            "description": "Exponent for the key"
          }
        },
        "description": "A JWK that can be used to verify a JWT",
        "example": null
      }
    },
    "responses": {
      "400": {
        "description": "error code 400",
        "content": {
          "text/plain": {
            "schema": {
              "$ref": "#/components/schemas/badRequest"
            }
          }
        }
      },
      "404": {
        "description": "error code 404",
        "content": {
          "text/plain": {
            "schema": {
              "$ref": "#/components/schemas/notFound"
            }
          }
        }
      },
      "500": {
        "description": "error code 500",
        "content": {
          "text/plain": {
            "schema": {
              "$ref": "#/components/schemas/internalError"
            }
          }
        }
      }
    },
    "parameters": {
      "rid": {
        "name": "rid",
        "in": "header",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "session"
      },
      "emailPasswordRid": {
        "name": "rid",
        "in": "header",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "emailpassword"
      },
      "thirdPartyRid": {
        "name": "rid",
        "in": "header",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "thirdparty"
      },
      "thirdPartyEmailPasswordRid": {
        "name": "rid",
        "in": "header",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "thirdpartyemailpassword"
      },
      "passwordlessRid": {
        "name": "rid",
        "in": "header",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "passwordless"
      },
      "thirdPartyPasswordlessRid": {
        "name": "rid",
        "in": "header",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "thirdpartypasswordless"
      },
      "emailVerificationRid": {
        "name": "rid",
        "in": "header",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        },
        "example": "emailverification"
      },
      "anti-csrf": {
        "name": "anti-csrf",
        "in": "header",
        "description": "This will only be here if enabled by the user.",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/token"
        }
      },
      "apiBasePath": {
        "name": "apiBasePath",
        "in": "path",
        "description": "Its value depends on the apiBasePath set by the user",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "example": "auth"
        }
      },
      "email": {
        "name": "email",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "testuser@gmail.com"
        }
      },
      "phoneNumber": {
        "name": "phoneNumber",
        "in": "query",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "0036701234567"
        }
      },
      "sRefreshToken": {
        "name": "sRefreshToken",
        "in": "cookie",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "$ref": "#/components/schemas/cookie"
        }
      },
      "sIdRefreshToken": {
        "name": "sIdRefreshToken",
        "in": "cookie",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "$ref": "#/components/schemas/cookie"
        }
      },
      "sAccessToken": {
        "name": "sAccessToken",
        "in": "cookie",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "$ref": "#/components/schemas/cookie"
        }
      }
    }
  }
}
