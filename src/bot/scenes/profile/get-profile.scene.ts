import { Scenes } from 'telegraf';
import axios from 'axios';
import { getProfileActionsKeyboard } from '..';

export const getProfileWizard = new Scenes.WizardScene<any>('GET_PROFILE', async (ctx) => {
  if (ctx.session.messageCounter) {
    for (const i of ctx.session.messageCounter) {
      ctx.deleteMessage(i);
    }
    ctx.session.messageCounter = undefined;
  }
  if (ctx.session.last_bot_message_id) {
    ctx.deleteMessage(ctx.session.last_bot_message_id);
  }
  let headerList;
  try {
    headerList = JSON.parse(JSON.stringify(ctx.session.auth));
  } catch {
    ctx.reply('–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å, –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –≤–æ–π—Ç–∏ üö™ :)');
    return;
  }
  let res;
  try {
    res = await axios.get('http://localhost:3300/user', {
      headers: {
        Cookie: `sAccessToken=${headerList.sAccessToken}; sIdRefreshToken=${headerList.sIdRefreshToken}`
      }
    });
    const {
      data: { user }
    } = res.data;
    const { message_id: msgid } = await ctx.reply(
      `ID: ${user.id} \n\n` +
        `–ò–º—è: ${user.firstName} \n\n` +
        `–§–∞–º–∏–ª–∏—è: ${user.lastName} \n\n` +
        `–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: ${user.birthDate} \n\n`
    );
    const { message_id: dialogid } = await ctx.reply('–î–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º üë®‚Äç', getProfileActionsKeyboard());
    ctx.session.last_bot_message_id = dialogid;
    Object.assign(ctx.session, { messageCounter: [msgid] });
  } catch (error: any) {
    ctx.reply(`–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –æ—à–∏–±–∫–∞ ${error.data.message}`);
  }
  await ctx.scene.leave();
});
